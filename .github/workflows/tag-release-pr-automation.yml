name: Create Release on Merge

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  create_release:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get previous tag
        id: get_previous_tag
        run: echo ::set-output name=previous_tag::$(git describe --abbrev=0)

      - name: Determine tag prefix
        id: determine_prefix
        run: |
          branch_name=$(echo ${GITHUB_REF#refs/heads/})
          prefix=$(echo $branch_name | cut -d "-" -f 1)
          echo "::set-output name=prefix::$prefix"

      - name: Increment tag
        id: increment_tag
        run: |
          prefix=${{ steps.determine_prefix.outputs.prefix }}
          previous_tag=${{ steps.get_previous_tag.outputs.previous_tag }}
          case $prefix in
            major)
              new_tag=$(echo $previous_tag | awk -F. '{print $1+1".0.0"}')
              ;;
            minor)
              new_tag=$(echo $previous_tag | awk -F. '{print $1"."$2+1".0"}')
              ;;
            patch)
              new_tag=$(echo $previous_tag | awk -F. '{print $1"."$2"."$3+1}')
              ;;
          esac
          echo "::set-output name=new_tag::$new_tag"

      - name: Create new tag
        id: create_tag
        uses: git-create-tag-action@latest
        with:
          tag: ${{ steps.increment_tag.outputs.new_tag }}
          message: 'New release'

      - name: Create new release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.increment_tag.outputs.new_tag }}
          release_name: 'New release'
          body: 'Release created from Github Action'
          draft: false
          prerelease: false
