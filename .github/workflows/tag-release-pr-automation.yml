
name: Automated tag & release creation on pull request

on:
  pull_request:
    branches:
      - main
      - master
    types: [closed]

jobs:
  create-new-tag:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v3'
        with:
          fetch-depth: 0
      - name: 'Extract branch name'
        shell: bash
        run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
        id: extract_branch
      - name: 'Get Latest Tag'
        id: get_latest_tag
        run: echo "latest_tag=$(git tag | grep -E '^[0-9]' | sort -V | tail -1))" >> $GITHUB_OUTPUT
      - name: 'Format new tag'
        id: format_new_tag
        run: |
            if [[ ${{ steps.extract_branch.outputs.branch }} =~ ^major-*$ ]]; then
              echo "new_tag=$(echo '${{ steps.get_latest_tag.outputs.latest_tag }}' | awk -F. '{$1 = $1 + 1;} 1' | sed 's/ /./g')" >> $GITHUB_OUTPUT
            elif [[ ${{ steps.extract_branch.outputs.branch }} =~ ^minor-*$ ]]; then
              echo "new_tag=$(echo '${{ steps.get_latest_tag.outputs.latest_tag }}' | awk -F. '{$2 = $2 + 1;} 1' | sed 's/ /./g')" >> $GITHUB_OUTPUT
            elif [[ ${{ steps.extract_branch.outputs.branch }} =~ ^patch-*$ ]]; then
              echo "new_tag=$(echo '${{ steps.get_latest_tag.outputs.latest_tag }}' | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')" >> $GITHUB_OUTPUT
            else
              exit 0
            fi
      - name: 'Create new tag'
        uses: 'rickstaa/action-create-tag@latest'
        id: tag_create
        with:
          tag: ${{ steps.format_new_tag.outputs.new_tag }}
      - name: 'Release snapshot'
        id: release-snapshot
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.format_new_tag.outputs.new_tag }}
          release_name: ${{ steps.format_new_tag.outputs.new_tag }}
          draft: false
          prerelease: false
